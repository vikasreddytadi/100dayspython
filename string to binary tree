s="1(2(4(8)(9))(5(1)(1)))(3(6(N)(1))(7(1)))" 
class node:
        def __init__(self,data):
                self.data=data
                self.left=None
                self.right=None
root=node(s[0])
i=1
def inorder(root):
        if(root==None):
                return
        inorder(root.left)
        print(root.data)
        inorder(root.right)
def fun(root,s):  
        global i
        if(i>=len(s)):
                return
        if(i<len(s) and s[i]==")"):
                i+=1
                return
        if(root.left==None):
                t=node(s[i+1])
                root.left=t
                i+=2
                fun(root.left,s)
                if(i<len(s) and s[i]==")"):
                        i+=1
                        return
        if(root.right==None):
                t=node(s[i+1])
                root.right=t
                i+=2
                fun(root.right,s)
                if(i<len(s) and s[i]==")"):
                        i+=1
                        return
fun(root,s)
inorder(root)         

// { Driver Code Starts
//Initial Template for C++


#include<bits/stdc++.h> 
using namespace std; 


 // } Driver Code Ends
//User function Template for C++

class Solution {
public:
    bool valid(int i,int j,int n,int m)
    {
        if(i<0 or j<0){ return false;}
        if(i>=n or j>=m){ return false;}
        return true;
    }
    int helpaterp(vector<vector<int>> h)
    {
        int cnt=0;
        queue<pair<int,int>> q1;
        queue<pair<int,int>> q2;
        int res=0;
        int n=h.size();
        int m=h[0].size();
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(h[i][j]==1)
                {
                    cnt++;
                }
                else if(h[i][j]==2)
                {
                    q1.push({i,j});
                }
            }
        }
        
        int d1[4]={-1,0,1,0};
        int d2[4]={0,1,0,-1};
        while(!q1.empty() or !q2.empty())
        {
            if(!q1.empty()){
                res++;
            }
            while(!q1.empty())
            {
                auto it=q1.front();
                int i=it.first;
                int j=it.second;
                q1.pop();
                for(int k=0;k<4;k++)
                {
                    if(valid(i+d1[k],j+d2[k],n,m) and h[i+d1[k]][j+d2[k]]==1)
                    {
                        cnt--;
                        h[i+d1[k]][j+d2[k]]=2;
                        q2.push({i+d1[k],j+d2[k]});
                    }
                    if(cnt==0)
                    {
                        return res;
                    }
                }
            }
            if(!q2.empty()){
                res++;
            }
            while(!q2.empty())
            {
                auto it=q2.front();
                int i=it.first;
                int j=it.second;
                q2.pop();
                for(int k=0;k<4;k++)
                {
                    if(valid(i+d1[k],j+d2[k],n,m) and h[i+d1[k]][j+d2[k]]==1)
                    {
                        cnt--;
                        h[i+d1[k]][j+d2[k]]=2;
                        q1.push({i+d1[k],j+d2[k]});
                    }
                    if(cnt==0)
                    {
                        return res; 
                    }
                }
            }
        }
        return -1;
    }
};


// { Driver Code Starts.


int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        int R;int C;
        
        cin>>R>>C;
        vector<vector<int>> hospital;
        int i,j;
        for(i=0;i<R;i++)
         {   vector<int> temp;
             for(j=0;j<C;j++)
            {
                int k;
                cin>>k;
                temp.push_back(k);
            }
            hospital.push_back(temp);
         }
        
        Solution ob;
        int ans = ob.helpaterp(hospital);
        cout << ans << endl;
    }
    return 0;
}  // } Driver Code Ends

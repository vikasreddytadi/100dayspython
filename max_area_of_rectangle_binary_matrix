def nsl(arr):
    stack=[]
    top=-1
    vec=[]
    for i in range(len(arr)):
        if(top==-1):
            vec.append(-1)
        elif(stack[top]<arr[i]):
            vec.append(stack[top])
        elif(stack[top]>=arr[i]):
            while(stack[top]>=arr[i]):
                stack.pop()
                top-=1
                if(top==-1):
                    vec.append(-1)
                    break
            else:
                vec.append(stack[top])
        stack.append(arr[i])
        top+=1
    return(vec)
def nsr(arr):
    stack=[]
    top=-1
    vec=[]
    for i in range(len(arr)-1,-1,-1):
        if(top==-1):
            vec.append(len(arr))
        elif(stack[top]<arr[i]):
            vec.append(stack[top])
        elif(stack[top]>=arr[i]):
            while(stack[top]>=arr[i]):
                stack.pop()
                top-=1
                if(top==-1):
                    vec.append(len(arr))
                    break
            else:
                vec.append(stack[top])
        stack.append(arr[i])
        top+=1
    return(vec[::-1])
def mah(arr):
    left=nsl(arr)
    right=nsr(arr)
    print(left,right)
    res=0
    for i in  range(len(left)):
        res=max(res,(right[i]-left[i]-1)*arr[i])
    return(res)
arr=[[0,1,1],[1,1,1],[0,1,1]]
num=mah(arr[0])
for i in range(1,len(arr)):
    for j in range(len(arr[i])):
        if(arr[i][j]):
            arr[i][j]+=arr[i-1][j]
    num=max(num,mah(arr[i]))
print(num)

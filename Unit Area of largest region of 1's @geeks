// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

 // } Driver Code Ends


class Solution
{
    public:
    //Function to find unit area of the largest region of 1s.
    bool valid(int i,int j,int n,int m)
    {
        if(i<0 or j<0){ return false;}
        if(i>=n or j>=m){ return false;}
        return true;
    }
    int findMaxArea(vector<vector<int>>& grid) {
        int d1[8]={-1,1,0,0,-1,1,-1,1};
        int d2[8]={0,0,-1,1,-1,1,1,-1};
        int cnt=0;
        queue<pair<int,int>> q1;
        queue<pair<int,int>> q2;
        int n=grid.size();
        int m=grid[0].size();
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(grid[i][j]==1)
                {
                    q1.push({i,j});
                }
            }
        }
        int vis[n][m];
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                vis[i][j]=0;
            }
        }
        while(!q1.empty())
        {
            int temp=0;
            auto it=q1.front();
            int i=it.first;
            int j=it.second;
            q1.pop();
            if(vis[i][j]==0)
            {
                vis[i][j]=1;
                q2.push({i,j});
                temp++;
                while(!q2.empty())
                {
                    auto it=q2.front();
                    i=it.first;
                    j=it.second;
                    q2.pop();
                    for(int k=0;k<8;k++)
                    {
                        if(valid(i+d1[k],j+d2[k],n,m) and vis[i+d1[k]][j+d2[k]]==0 and grid[i+d1[k]][j+d2[k]]==1)
                        {
                            vis[i+d1[k]][j+d2[k]]=1;
                            q2.push({i+d1[k],j+d2[k]});
                            temp++;
                        }
                    }
                }
            }
            cnt=max(cnt,temp);
        }
        return cnt;
        
    }
};

// { Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		int n, m;
		cin >> n >> m;
		vector<vector<int>>grid(n, vector<int>(m, -1));
		for(int i = 0; i < n; i++){
			for(int j = 0; j < m; j++){
				cin >> grid[i][j];
			}
		}
		Solution obj;
		int ans = obj.findMaxArea(grid);
		cout << ans << "\n";
	}
	return 0;
}  // } Driver Code Ends
